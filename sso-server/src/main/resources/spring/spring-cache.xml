<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Redis配置 -->
    <!-- sentinel机制下的Redis配置 -->
    <bean id="redisSentinelConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
        <property name="master">
            <bean class="org.springframework.data.redis.connection.RedisNode">
                <property name="name" value="mymaster"/>
            </bean>
        </property>
        <property name="sentinels">
            <set>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg value="172.21.129.63"/>
                    <constructor-arg value="26379"/>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg value="172.21.129.63"/>
                    <constructor-arg value="26380"/>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg value="172.21.129.63"/>
                    <constructor-arg value="26381"/>
                </bean>
            </set>
        </property>
    </bean>
    <!-- Jedis连接池配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="20"/>
        <property name="maxIdle" value="5"/>
        <property name="maxWaitMillis" value="1000"/>
        <property name="testOnBorrow" value="true"/>
    </bean>
    <!-- Redis连接工厂 -->
    <bean id="jedisConntectionFacatory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <!-- Sentinel机制 -->
        <constructor-arg ref="redisSentinelConfiguration"></constructor-arg>
        <constructor-arg ref="jedisPoolConfig"></constructor-arg>
    </bean>
    <!-- Redis Template -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConntectionFacatory"/>
        <property name="defaultSerializer" >
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"></bean>
        </property>
    </bean>

    <!-- 缓存设置 -->
    <!-- SSO服务器端存放用户认证信息的缓存 （可以通过TGT获取用户信息） -->
    <bean id="ssoCache" class="io.summerx.framework.cache.redis.RedisCustomizedCache">
        <constructor-arg value="ssoCache"/>
        <constructor-arg value="ssoCache:"/>
        <constructor-arg ref="redisTemplate"/>
        <constructor-arg value="60000"/>
    </bean>
    <!-- 应用端存放用户信息的缓存 （可以通过SSO服务器授权的PT获取用户信息） -->
    <bean id="userCache" class="io.summerx.framework.cache.redis.RedisCustomizedCache">
        <constructor-arg value="userCache"/>
        <constructor-arg value="userCache:"/>
        <constructor-arg ref="redisTemplate"/>
        <constructor-arg value="30000"/>
    </bean>

</beans>